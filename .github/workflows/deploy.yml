name: CI/CD Pipeline for AWS EKS

on:
  push:
    branches:
      - main

env:
  ECR_URI: 283565981308.dkr.ecr.us-east-1.amazonaws.com/otel-demo
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: Kubernetes-demo

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push Docker Images
      env:
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        IMAGES=(
          "frontendproxy"
          "loadgenerator"
          "frontend"
          "checkoutservice"
          "currencyservice"
          "shippingservice"
          "frauddetectionservice"
          "recommendationservice"
          "adservice"
          "productcatalogservice"
          "quoteservice"
          "flagdui"
          "cartservice"
          "accountingservice"
          "emailservice"
          "paymentservice"
          "imageprovider"
          "kafka"
        )
        for IMAGE in "${IMAGES[@]}"; do
          docker build -t $ECR_URI:$IMAGE_TAG-$IMAGE -f ./Dockerfile .
          docker push $ECR_URI:$IMAGE_TAG-$IMAGE
        done

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Update Kubernetes Manifests
      env:
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|ghcr.io/open-telemetry/demo|$ECR_URI:$IMAGE_TAG|g" kubernetes/opentelemetry-demo.yaml

    - name: Deploy to Kubernetes
      run: kubectl apply -f kubernetes/opentelemetry-demo.yaml -n otel-demo

    - name: Verify Deployment Rollout
      run: |
        SERVICES=(
          "frontendproxy"
          "loadgenerator"
          "frontend"
          "checkoutservice"
          "currencyservice"
          "shippingservice"
          "frauddetectionservice"
          "recommendationservice"
          "adservice"
          "productcatalogservice"
          "quoteservice"
          "flagdui"
          "cartservice"
          "accountingservice"
          "emailservice"
          "paymentservice"
          "imageprovider"
          "kafka"
        )
        for SERVICE in "${SERVICES[@]}"; do
          kubectl rollout status deployment/$SERVICE -n otel-demo
        done
