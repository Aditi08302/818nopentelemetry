name: CI/CD Pipeline for AWS EKS

on:
  push:
    branches:
      - main

env:
  ECR_URI: 283565981308.dkr.ecr.us-east-1.amazonaws.com/otel-demo
  AWS_REGION: us-east-1
  EKS_NAMESPACE: otel-demo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Update Kubernetes Manifests
      env:
        ECR_URI: ${{ env.ECR_URI }}
      run: |
        sed -i 's|ghcr.io/open-telemetry/demo|$ECR_URI|g' opentelemtry-demo.yaml
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
        export KUBECONFIG=~/.kube/config
    - name: Verify Cluster Connection
      run: |
        echo "Current context:" $(kubectl config current-context)
        kubectl get nodes
    - name: Ensure Namespace Exists
      run: |
        kubectl get namespace ${{ env.EKS_NAMESPACE }} || kubectl create namespace ${{ env.EKS_NAMESPACE }}
    - name: Deploy to Kubernetes
      env:
        EKS_NAMESPACE: ${{ env.EKS_NAMESPACE }}
      run: |
        kubectl apply -f opentelemtry-demo.yaml -n $EKS_NAMESPACE --validate=false
    - name: Verify Deployment Rollout
      env:
        EKS_NAMESPACE: ${{ env.EKS_NAMESPACE }}
      run: |
        SERVICES=(
          "opentelemetry-demo-frontendproxy"
          "opentelemetry-demo-loadgenerator"
          "opentelemetry-demo-frontend"
          "opentelemetry-demo-checkoutservice"
          "opentelemetry-demo-currencyservice"
          "opentelemetry-demo-shippingservice"
          "opentelemetry-demo-frauddetectionservice"
          "opentelemetry-demo-recommendationservice"
          "opentelemetry-demo-adservice"
          "opentelemetry-demo-productcatalogservice"
          "opentelemetry-demo-quoteservice"
          "opentelemetry-demo-flagd"
          "opentelemetry-demo-cartservice"
          "opentelemetry-demo-accountingservice"
          "opentelemetry-demo-emailservice"
          "opentelemetry-demo-paymentservice"
          "opentelemetry-demo-imageprovider"
          "opentelemetry-demo-kafka"
        )
        for SERVICE in "${SERVICES[@]}"; do
          echo "Verifying rollout for deployment $SERVICE..."
          kubectl rollout status deployment/$SERVICE -n $EKS_NAMESPACE --timeout=600s || {
            echo "Deployment $SERVICE failed. Collecting debug information."
            kubectl describe deployment/$SERVICE -n $EKS_NAMESPACE
            kubectl get pods -n $EKS_NAMESPACE -l app=$SERVICE
            kubectl logs -n $EKS_NAMESPACE -l app=$SERVICE --tail=100
            exit 1
          }
        done
