name: CI/CD Pipeline for AWS EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        aws-region: us-east-1

    - name: Build and Push Docker Images
      env:
        ECR_URI: 283565981308.dkr.ecr.us-east-1.amazonaws.com/otel-demo
      run: |
        IMAGES=(
            "frontendproxy"
            "loadgenerator"
            "frontend"
            "checkoutservice"
            "currencyservice"
            "shippingservice"
            "frauddetectionservice"
            "recommendationservice"
            "adservice"
            "productcatalogservice"
            "quoteservice"
            "flagdui"
            "cartservice"
            "accountingservice"
            "emailservice"
            "paymentservice"
            "imageprovider"
            "kafka"
        )
        for IMAGE in "${IMAGES[@]}"; do
            docker build -t $ECR_URI:$IMAGE -f ./Dockerfile .
            docker push $ECR_URI:$IMAGE
        done

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure kubectl
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update Kubernetes Manifests
      run: |
        sed -i 's|ghcr.io/open-telemetry/demo|283565981308.dkr.ecr.us-east-1.amazonaws.com/otel-demo|g' kubernetes/opentelemetry-demo.yaml

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubernetes/opentelemetry-demo.yaml -n otel-demo

    - name: Verify Deployment Rollout
      run: |
        kubectl rollout status deployment/frontendproxy -n otel-demo

