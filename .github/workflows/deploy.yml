name: CI/CD Pipeline for OpenTelemetry Demo

on:
  push:
    branches:
      - main2
  pull_request:
    branches:
      - main2
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Authenticate with Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          IMAGE_TAG=$(date +%s)
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          docker build -t 283565981308.dkr.ecr.us-east-1.amazonaws.com/otel-demo/otel-demo-1:${{ env.IMAGE_TAG }} .

      - name: Push Docker Image to ECR
        run: |
          docker push 283565981308.dkr.ecr.us-east-1.amazonaws.com/otel-demo/otel-demo-1:${{ env.IMAGE_TAG }}

      - name: Output Image Tag
        run: echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"
        id: image_tag
        outputs:
          tag: ${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up kubectl
        run: |
          aws eks --region us-east-1 update-kubeconfig --name otel-demo-cluster

      - name: Update Kubernetes Manifests and Deploy
        run: |
          sed -i "s|IMAGE_PLACEHOLDER|283565981308.dkr.ecr.us-east-1.amazonaws.com/otel-demo/otel-demo-1:${{ needs.build.outputs.tag }}|g" opentelemtry-demo.yaml
          kubectl apply -f opentelemtry-demo.yaml -n otel-demo --validate=false

      - name: Verify Deployment
        run: |
          kubectl get pods

  rollback:
    runs-on: ubuntu-latest
    if: failure()
    needs: deploy
    steps:
      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Set up kubectl
        run: |
          aws eks --region us-east-1 update-kubeconfig --name otel-demo-cluster

      - name: Rollback to previous stable version
        run: |
          kubectl rollout undo deployment/otel-demo-paymentservice
